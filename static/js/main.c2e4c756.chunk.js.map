{"version":3,"sources":["context/TaskListContext.js","components/Task.js","components/TaskList.js","components/TaskForm.js","components/Header.js","components/App.js","index.js"],"names":["TaskListContext","createContext","TaskListContextProvider","props","initialState","JSON","parse","localStorage","getItem","useState","tasks","setTasks","editItem","setEditItem","useEffect","setItem","stringify","Provider","value","addTask","title","id","uuid","removeTask","filter","task","clearList","findItem","item","find","editTask","newTasks","map","children","Task","useContext","className","onClick","TaskList","length","key","TaskForm","setTitle","onSubmit","e","preventDefault","onChange","target","type","placeholder","required","Header","App","ReactDOM","render","document","getElementById"],"mappings":"yMAGaA,EAAkBC,0BAwDhBC,EAtDiB,SAACC,GAC/B,IAAMC,EAAeC,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,GADzB,EAGfC,mBAASL,GAHM,mBAGlCM,EAHkC,KAG3BC,EAH2B,OAKTF,mBAAS,MALA,mBAKlCG,EALkC,KAKxBC,EALwB,KAOzCC,qBAAU,WACRP,aAAaQ,QAAQ,QAASV,KAAKW,UAAUN,MAC5C,CAACA,IA4BJ,OACE,kBAACV,EAAgBiB,SAAjB,CACEC,MAAO,CACLR,QACAS,QA9BU,SAACC,GACfT,EAAS,GAAD,mBAAKD,GAAL,CAAY,CAAEU,QAAOC,GAAIC,mBA8B7BC,WA3Ba,SAACF,GAClBV,EAASD,EAAMc,QAAO,SAACC,GAAD,OAAUA,EAAKJ,KAAOA,OA2BxCK,UAxBY,WAChBf,EAAS,KAwBLgB,SArBW,SAACN,GAChB,IAAMO,EAAOlB,EAAMmB,MAAK,SAACJ,GAAD,OAAUA,EAAKJ,KAAOA,KAE9CR,EAAYe,IAmBRE,SAhBW,SAACV,EAAOC,GACvB,IAAMU,EAAWrB,EAAMsB,KAAI,SAACP,GAAD,OACzBA,EAAKJ,KAAOA,EAAK,CAAED,QAAOC,MAAOI,KAEnCd,EAASoB,GACTlB,EAAY,OAYRD,aAGDT,EAAM8B,WC/BEC,EApBF,SAAC,GAAc,IAAZT,EAAW,EAAXA,KAAW,EACQU,qBAAWnC,GAApCuB,EADiB,EACjBA,WAAYI,EADK,EACLA,SACpB,OACE,wBAAIS,UAAU,aACZ,8BAAOX,EAAKL,OACZ,6BACE,4BACEiB,QAAS,kBAAMd,EAAWE,EAAKJ,KAC/Be,UAAU,uBAEV,uBAAGA,UAAU,sBAEf,4BAAQC,QAAS,kBAAMV,EAASF,EAAKJ,KAAKe,UAAU,qBAClD,uBAAGA,UAAU,mBCKRE,EAjBE,WAAO,IACd5B,EAAUyB,qBAAWnC,GAArBU,MACR,OACE,6BACGA,EAAM6B,OACL,wBAAIH,UAAU,QACX1B,EAAMsB,KAAI,SAACP,GACV,OAAO,kBAAC,EAAD,CAAMA,KAAMA,EAAMe,IAAKf,EAAKJ,SAIvC,yBAAKe,UAAU,YAAf,cCuCOK,EAnDE,WAAO,IAAD,EAC8BN,qBACjDnC,GADMmB,EADa,EACbA,QAASO,EADI,EACJA,UAAWd,EADP,EACOA,SAAUkB,EADjB,EACiBA,SADjB,EAKKrB,mBAAS,IALd,mBAKdW,EALc,KAKPsB,EALO,KA6BrB,OARA5B,qBAAU,WAEN4B,EADE9B,EACOA,EAASQ,MAET,MAEV,CAACR,IAGF,0BAAM+B,SAnBa,SAACC,GACpBA,EAAEC,iBACGjC,EAIHkB,EAASV,EAAOR,EAASS,KAHzBF,EAAQC,GACRsB,EAAS,MAemBN,UAAU,QACtC,2BACEU,SAzBe,SAACF,GACpBF,EAASE,EAAEG,OAAO7B,QAyBdA,MAAOE,EACP4B,KAAK,OACLZ,UAAU,aACVa,YAAY,cACZC,UAAQ,IAEV,yBAAKd,UAAU,WACb,4BAAQY,KAAK,SAASZ,UAAU,oBAC7BxB,EAAW,YAAc,YAE5B,4BAAQyB,QAASX,EAAWU,UAAU,iBAAtC,YCpCOe,EARA,WACb,OACE,yBAAKf,UAAU,UACb,8CCkBSgB,G,MAhBH,WACV,OACE,kBAAC,EAAD,KACE,yBAAKhB,UAAU,aACb,yBAAKA,UAAU,eACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,QACb,kBAAC,EAAD,MACA,kBAAC,EAAD,YCXZiB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.c2e4c756.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\nimport { v1 as uuid } from \"uuid\";\n\nexport const TaskListContext = createContext();\n\nconst TaskListContextProvider = (props) => {\n  const initialState = JSON.parse(localStorage.getItem(\"tasks\")) || [];\n\n  const [tasks, setTasks] = useState(initialState);\n\n  const [editItem, setEditItem] = useState(null);\n\n  useEffect(() => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }, [tasks]);\n\n  const addTask = (title) => {\n    setTasks([...tasks, { title, id: uuid() }]);\n  };\n\n  const removeTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  const clearList = () => {\n    setTasks([]);\n  };\n\n  const findItem = (id) => {\n    const item = tasks.find((task) => task.id === id);\n\n    setEditItem(item);\n  };\n\n  const editTask = (title, id) => {\n    const newTasks = tasks.map((task) =>\n      task.id === id ? { title, id } : task\n    );\n    setTasks(newTasks);\n    setEditItem(null);\n  };\n\n  return (\n    <TaskListContext.Provider\n      value={{\n        tasks,\n        addTask,\n        removeTask,\n        clearList,\n        findItem,\n        editTask,\n        editItem,\n      }}\n    >\n      {props.children}\n    </TaskListContext.Provider>\n  );\n};\n\nexport default TaskListContextProvider;\n","import React, { useContext } from \"react\";\nimport { TaskListContext } from \"../context/TaskListContext\";\n\nconst Task = ({ task }) => {\n  const { removeTask, findItem } = useContext(TaskListContext);\n  return (\n    <li className=\"list-item\">\n      <span>{task.title}</span>\n      <div>\n        <button\n          onClick={() => removeTask(task.id)}\n          className=\"btn-delete task-btn\"\n        >\n          <i className=\"fas fa-trash-alt\"></i>\n        </button>\n        <button onClick={() => findItem(task.id)} className=\"btn-edit task-btn\">\n          <i className=\"fas fa-pen\"></i>\n        </button>\n      </div>\n    </li>\n  );\n};\n\nexport default Task;\n","import React, { useContext } from \"react\";\nimport { TaskListContext } from \"../context/TaskListContext\";\nimport Task from \"./Task\";\n\nconst TaskList = () => {\n  const { tasks } = useContext(TaskListContext);\n  return (\n    <div>\n      {tasks.length ? (\n        <ul className=\"list\">\n          {tasks.map((task) => {\n            return <Task task={task} key={task.id} />;\n          })}\n        </ul>\n      ) : (\n        <div className=\"no-tasks\">No Tasks</div>\n      )}\n    </div>\n  );\n};\n\nexport default TaskList;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { TaskListContext } from \"../context/TaskListContext\";\n\nconst TaskForm = () => {\n  const { addTask, clearList, editItem, editTask } = useContext(\n    TaskListContext\n  );\n\n  const [title, setTitle] = useState(\"\");\n\n  const handleChange = (e) => {\n    setTitle(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!editItem) {\n      addTask(title);\n      setTitle(\"\");\n    } else {\n      editTask(title, editItem.id);\n    }\n  };\n\n  useEffect(() => {\n    if (editItem) {\n      setTitle(editItem.title);\n    } else {\n      setTitle(\"\");\n    }\n  }, [editItem]);\n\n  return (\n    <form onSubmit={handleSubmit} className=\"form\">\n      <input\n        onChange={handleChange}\n        value={title}\n        type=\"text\"\n        className=\"task-input\"\n        placeholder=\"Add Task...\"\n        required\n      />\n      <div className=\"buttons\">\n        <button type=\"submit\" className=\"btn add-task-btn\">\n          {editItem ? \"Edit Task\" : \"Add Task\"}\n        </button>\n        <button onClick={clearList} className=\"btn clear-btn\">\n          Clear\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default TaskForm;\n","import React from \"react\";\n\nconst Header = () => {\n  return (\n    <div className=\"header\">\n      <h1>Task Manager</h1>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport TaskList from \"./TaskList\";\nimport TaskListContextProvider from \"../context/TaskListContext\";\nimport TaskForm from \"./TaskForm\";\nimport Header from \"./Header\";\nimport \"../App.css\";\n\nconst App = () => {\n  return (\n    <TaskListContextProvider>\n      <div className=\"container\">\n        <div className=\"app-wrapper\">\n          <Header />\n          <div className=\"main\">\n            <TaskForm />\n            <TaskList />\n          </div>\n        </div>\n      </div>\n    </TaskListContextProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}